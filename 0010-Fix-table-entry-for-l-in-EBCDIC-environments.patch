From 851af6faeda1df4db6977f60b8f7f8abd72dc6c5 Mon Sep 17 00:00:00 2001
From: ph10 <ph10@2f5784b3-3f2a-0410-8824-cb99058d5e15>
Date: Tue, 9 Jun 2015 16:33:27 +0000
Subject: [PATCH 10/12] Fix table entry for \l in EBCDIC environments.

git-svn-id: svn://vcs.exim.org/pcre/code/trunk@1564 2f5784b3-3f2a-0410-8824-cb99058d5e15
---
 ChangeLog      | 5 ++++-
 pcre_compile.c | 2 +-
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 38d9638..c69236b 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -40,7 +40,10 @@ Version 8.38 xx-xxx-xxxx
     fixed by always allowing for more memory, even if not needed. (A proper fix 
     is implemented in PCRE2, but it involves more refactoring.) 
     
-8.  There was no check for integer overflow in subroutine calls such as (?123). 
+8.  There was no check for integer overflow in subroutine calls such as (?123).
+
+9.  The table entry for \l in EBCDIC environments was incorrect, leading to its
+    being treated as a literal 'l' instead of causing an error. 
  
 
 Version 8.37 28-April-2015
diff --git a/pcre_compile.c b/pcre_compile.c
index 09b0e38..75e6aab 100644
--- a/pcre_compile.c
+++ b/pcre_compile.c
@@ -204,7 +204,7 @@ static const short int escapes[] = {
 /*  78 */     0,   '`',    ':',     '#',    '@',  '\'',    '=',    '"',
 /*  80 */     0,     7, -ESC_b,       0, -ESC_d, ESC_e,  ESC_f,      0,
 /*  88 */-ESC_h,     0,      0,     '{',      0,     0,      0,      0,
-/*  90 */     0,     0, -ESC_k,     'l',      0, ESC_n,      0, -ESC_p,
+/*  90 */     0,     0, -ESC_k,       0,      0, ESC_n,      0, -ESC_p,
 /*  98 */     0, ESC_r,      0,     '}',      0,     0,      0,      0,
 /*  A0 */     0,   '~', -ESC_s, ESC_tee,      0,-ESC_v, -ESC_w,      0,
 /*  A8 */     0,-ESC_z,      0,       0,      0,   '[',      0,      0,
-- 
1.9.1

